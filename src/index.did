type CustomerInteraction = record {
  id : text;
  review : text;
  createdAt : nat64;
  productId : text;
  customerId : text;
  rating : float64;
};
type CustomerInteractionPayload = record {
  review : text;
  productId : text;
  customerId : text;
  rating : float64;
};
type FoodPayload = record {
  name : text;
  description : text;
  price : nat64;
  quantityAvailable : float64;
};
type FoodProduct = record {
  id : text;
  name : text;
  description : text;
  price : nat64;
  quantityAvailable : float64;
};
type Order = record {
  id : text;
  status : text;
  createdAt : nat64;
  productId : text;
  quantity : float64;
  customerId : text;
};
type OrderPayload = record {
  productId : text;
  quantity : float64;
  customerId : text;
};
type _AzleResult = variant { Ok : CustomerInteraction; Err : text };
type _AzleResult_1 = variant { Ok : FoodProduct; Err : text };
type _AzleResult_2 = variant { Ok : vec CustomerInteraction; Err : text };
type _AzleResult_3 = variant { Ok : vec Order; Err : text };
type _AzleResult_4 = variant { Ok : vec FoodProduct; Err : text };
type _AzleResult_5 = variant { Ok : Order; Err : text };
service : () -> {
  addCustomerInteraction : (CustomerInteractionPayload) -> (_AzleResult);
  addProduct : (FoodPayload) -> (_AzleResult_1);
  cancelOrder : (text) -> (bool);
  confirmOrder : (text) -> (bool);
  deliverOrder : (text) -> (bool) query;
  getCustomerInteractionsByProduct : (text) -> (_AzleResult_2) query;
  getOrdersByCustomer : (text) -> (_AzleResult_3) query;
  getProducts : () -> (_AzleResult_4) query;
  getProductsbyId : () -> (_AzleResult_4) query;
  placeOrder : (OrderPayload) -> (_AzleResult_5);
  updateProductQuantity : (text, float64) -> (_AzleResult_1);
}